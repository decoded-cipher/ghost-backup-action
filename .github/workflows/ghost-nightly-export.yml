name: Ghost nightly export (multi-job)

on:
  schedule:
    # 18:30 UTC = 00:00 Asia/Kolkata
    - cron: "30 18 * * *"
  workflow_dispatch: {}

concurrency:
  group: ghost-nightly-export
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.istdate.outputs.date }}
    steps:
      - name: Compute IST date (YYYY-MM-DD) once
        id: istdate
        run: |
          IST_DATE=$(TZ=Asia/Kolkata date +%F)
          echo "date=$IST_DATE" >> $GITHUB_OUTPUT
          echo "Using IST date: $IST_DATE"

  export_json:
    runs-on: ubuntu-latest
    needs: prepare
    permissions: {}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: npm install jsonwebtoken

      - name: Export content+settings JSON
        env:
          GHOST_ADMIN_API_URL: ${{ secrets.GHOST_ADMIN_API_URL }}
          GHOST_ADMIN_API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
          BACKUP_DATE: ${{ needs.prepare.outputs.date }}
        run: node .github/scripts/ghost-export-json.mjs

      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: ghost-json-${{ needs.prepare.outputs.date }}
          path: output/${{ needs.prepare.outputs.date }}/ghost-export-${{ needs.prepare.outputs.date }}.json
          if-no-files-found: error
          retention-days: 5

  export_members:
    runs-on: ubuntu-latest
    needs: export_json
    permissions: {}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: npm install jsonwebtoken

      - name: Export members CSV
        env:
          GHOST_ADMIN_API_URL: ${{ secrets.GHOST_ADMIN_API_URL }}
          GHOST_ADMIN_API_KEY: ${{ secrets.GHOST_ADMIN_API_KEY }}
          BACKUP_DATE: ${{ needs.prepare.outputs.date }}
        run: node .github/scripts/ghost-export-members.mjs

      - name: Upload CSV artifact
        uses: actions/upload-artifact@v4
        with:
          name: ghost-csv-${{ needs.prepare.outputs.date }}
          path: output/${{ needs.prepare.outputs.date }}/ghost-members-${{ needs.prepare.outputs.date }}.csv
          if-no-files-found: error
          retention-days: 5

#   export_assets:
#     runs-on: ubuntu-latest
#     needs: export_json
#     steps:
#       - uses: actions/checkout@v4

#       - name: Download JSON artifact from export_json
#         uses: actions/download-artifact@v4
#         with:
#           name: ghost-json-${{ needs.prepare.outputs.date }}
#           path: output/${{ needs.prepare.outputs.date }}

#       - uses: actions/setup-node@v4
#         with:
#           node-version: "20"

#       - name: Run assets downloader
#         env:
#           BACKUP_DATE: ${{ needs.prepare.outputs.date }}
#           GHOST_ADMIN_API_URL: ${{ secrets.GHOST_ADMIN_API_URL }}
#         run: node .github/scripts/ghost-download-assets.mjs

#       - name: Upload assets artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: ghost-assets-${{ needs.prepare.outputs.date }}
#           path: output/${{ needs.prepare.outputs.date }}/assets
#           if-no-files-found: warn
#           retention-days: 5

  finalize:
    runs-on: ubuntu-latest
    # needs: [export_members, export_assets]
    needs: export_members
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download JSON artifact
        uses: actions/download-artifact@v4
        with:
          name: ghost-json-${{ needs.prepare.outputs.date }}
          path: output/${{ needs.prepare.outputs.date }}

      - name: Download CSV artifact
        uses: actions/download-artifact@v4
        with:
          name: ghost-csv-${{ needs.prepare.outputs.date }}
          path: output/${{ needs.prepare.outputs.date }}

    #   - name: Download assets artifact
    #     if: ${{ vars.DOWNLOAD_ASSETS == 'true' || secrets.DOWNLOAD_ASSETS == 'true' }}
    #     uses: actions/download-artifact@v4
    #     with:
    #       name: ghost-assets-${{ needs.prepare.outputs.date }}
    #       path: output/${{ needs.prepare.outputs.date }}/assets

      - name: Prune day folders older than 30 days
        shell: bash
        run: |
          set -euo pipefail
          ROOT=output
          mkdir -p "$ROOT"
          CUTOFF=$(date -d "${{ needs.prepare.outputs.date }} -30 days" +%F)
          echo "Cutoff: $CUTOFF"
          shopt -s nullglob
          for d in "$ROOT"/*; do
            [ -d "$d" ] || continue
            base=$(basename "$d")
            if [[ "$base" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ && "$base" < "$CUTOFF" ]]; then
              echo "Removing $d"
              rm -rf -- "$d"
            fi
          done

      - name: Commit & push (if changed)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain output)" ]; then
            git add output
            git commit -m "backups: ${{ needs.prepare.outputs.date }} (JSON + CSV) [skip ci]"
            git push
          else
            echo "No changes to commit."
          fi
